@model IEnumerable<Entities.Television.ViewModels.TelevisionShowViewModel>

@{
    ViewData["Title"] = "Television Library";

    List<object> toolbarItems = new List<object>();
    //toolbarItems.Add("Edit");
    //toolbarItems.Add("Delete");
    //toolbarItems.Add("Update");
    toolbarItems.Add("ExcelExport");
    toolbarItems.Add("Search");
}

<script>
    function loadGrid() {
        var grid = document.getElementById('Grid').ej2_instances[0];
        var rowHeight = grid.getRowHeight();  //height of the each row
        var gridHeight = grid.height;  //grid height
        var pageSize = grid.pageSettings.pageSize;   //initial page size
        var pageResize = (gridHeight - (pageSize * rowHeight)) / rowHeight; //new page size is obtained here
        grid.pageSettings.pageSize = pageSize + Math.round(pageResize);

        //Create our Seasons grid in detailTemplate
        this.childGrid = {
            dataSource: null,
            allowPaging: true,
            pageSettings: { pageSize: 10 },
            columns: [
                { field: 'SeasonName', headerTextAlign: "Center", headerText: 'Season', textAlign: 'Left', width: 120 },
                { field: 'EpisodeCount', headerTextAlign: "Center", headerText: 'Episode Count', width: 150 }
            ],
            created: createSeasonsGrid
        };

        //Create our Episodes grid in detailTemplate
        this.childGrid.childGrid = {
            dataSource: null,
            allowPaging: true,
            pageSettings: { pageSize: 10 },
            columns: [
                { field: 'EpisodeNumber', headerTextAlign: "Center", headerText: 'Ep. #', width: 150 },
                { field: 'EpisodeName', headerTextAlign: "Center", headerText: 'Episode Name', width: 150 },
                { field: 'EpisodeRuntime', headerTextAlign: "Center", headerText: 'Runtime (minutes)', width: 150 },
                { field: 'EpisodeOverview', headerTextAlign: "Center", headerText: 'Overview', width: 150 }
            ],
            created: createEpisodesGrid
        };
    }

</script>
<script>
    function createSeasonsGrid() {

        // render seasons grid data
        this.dataSource = this.parentDetails.parentRowData.Seasons;
        this.query = new ej.data.Query();
    }

    function createEpisodesGrid() {

        // render episodes grid data
        this.dataSource = this.parentDetails.parentRowData.Episodes;
        this.query = new ej.data.Query();
    }
</script>

<h1>Television Show Library</h1>

<ejs-grid id="Grid" 
          allowExcelExport="true" 
          allowSelection="true" 
          toolbar=toolbarItems 
          dataSource="@ViewBag.DataSource" 
          allowSorting="true" 
          allowPaging="true" 
          width="100%" 
          height="750" 
          gridLines="Both" 
          load="loadGrid">

    <e-grid-columns>
        <e-grid-column field="Id" headerTemplate="#header_id_template" headerTextAlign="Center" width="80" />
        <e-grid-column field="ShowName" headerTemplate="#header_name_template" headerTextAlign="Center" width="150" />
        <e-grid-column field="ShowPath" headerTemplate="#header_showPath_template" headerTextAlign="Center" width="200" />
        <e-grid-column field="ShowGenre" headerTemplate="#header_genre_template" headerTextAlign="Center" width="80" />
    </e-grid-columns>

</ejs-grid>

<script type="text/x-template" id="header_id_template">
    <span style="font-size: 16px; font-weight: bold;">
        Show ID
    </span>
</script>
<script type="text/x-template" id="header_name_template">
    <span style="font-size: 16px; font-weight: bold;">
        Television Show Name
    </span>
</script>
<script type="text/x-template" id="header_overview_template">
    <span style="font-size: 16px; font-weight: bold;">
        Show Overview
    </span>
</script>
<script type="text/x-template" id="header_genre_template">
    <span style="font-size: 16px; font-weight: bold;">
        Show Genre
    </span>
</script>
<script type="text/x-template" id="header_showPath_template">
    <span style="font-size: 16px; font-weight: bold;">
        Show Path
    </span>
</script>
