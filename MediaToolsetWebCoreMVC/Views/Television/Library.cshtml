@model IEnumerable<Entities.Data.EF_Core.DatabaseEntities.TelevisionShow>

@{
    ViewData["Title"] = "Television Library";

    List<object> toolbarItems = new List<object>();

    //toolbarItems.Add("Edit");
    //toolbarItems.Add("Delete");
    //toolbarItems.Add("Update");

    //toolbarItems.Add("ExcelExport");
    //toolbarItems.Add("Add");
    toolbarItems.Add("Search");
}

<script>
    function loadGrid() {
        var grid = document.getElementById('Grid').ej2_instances[0];
        var rowHeight = grid.getRowHeight();  //height of each row
        var gridHeight = grid.height;  //grid height
        var pageSize = grid.pageSettings.pageSize;   //initial page size
        var pageResize = (gridHeight - (pageSize * rowHeight)) / rowHeight; //new page size is obtained here
        grid.pageSettings.pageSize = pageSize + Math.round(pageResize);

        //grid.hideSpinner = () => true;
        //ej.popups.setSpinner({ template: '<div style="width:100%;height:100%" class="custom-rolling"><div></div></div>' });

        //Create our Seasons child grid for each show
        this.childGrid = {
            dataSource: null,
            allowPaging: false,
            toolbar: [{ text: 'Add Season', tooltipText: 'Add new season', prefixIxon: 'e-add', id: 'AddSeason' }],
            dataBound: function (args) {
                this.getHeaderTable().remove();
                this.getContent().css("border-top", "1px solid #c8c8c8;");
            },
            columns: [
                { field: 'SeasonName', textAlign: 'Left', width: 200 }
            ],
            created: createSeasonsGrid
        };
    }

</script>
<script>
    function createSeasonsGrid() {

        // render seasons grid data
        this.dataSource = this.parentDetails.parentRowData.TelevisionSeasons;
        this.query = new ej.data.Query();

        //Create our Episodes child grid for each season within each show
        this.childGrid = {
            dataSource: null,
            allowPaging: true,
            pageSettings: { pageSize: 5 },
            columns: [
                { field: 'EpisodeNumber', headerTextAlign: "Center", headerText: '#', width: 50 },
                { field: 'EpisodePath', headerTextAlign: "Center", headerText: 'Episode Name', width: 150 },
                { headerTextAlign: 'Center', template: '#content_episode_actions_template', width: 200 }
            ],
            created: createEpisodesGrid
        };
    }

    function createEpisodesGrid() {

        // render episodes grid data
        this.dataSource = this.parentDetails.parentRowData.TelevisionEpisodes;
        this.query = new ej.data.Query();
    }

</script>

<h1>Television Show Library</h1>

<ejs-grid id="Grid"
          allowExcelExport="true"
          allowSelection="true"
          toolbar=toolbarItems
          dataSource="@Model"
          allowSorting="true"
          allowPaging="true"
          width="100%"
          height="750"
          gridLines="Both"
          load="loadGrid">

    <e-grid-columns>
        <e-grid-column field="Id" headerTemplate="#header_id_template" headerTextAlign="Center" width="50" />
        <e-grid-column field="ShowName" headerTemplate="#header_name_template" headerTextAlign="Center" width="150" />
        <e-grid-column field="ShowPath" headerTemplate="#header_showPath_template" headerTextAlign="Center" width="170" />
        <e-grid-column field="" headerTemplate="#header_actions_template" template="#content_show_actions_template" headerTextAlign="Center" width="120" />
    </e-grid-columns>

</ejs-grid>

@section scripts
{
    @*Popup model for showing Television Show, Season, and Episode details, as well as making edits*@
    <div id='PopupModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='PopupModalContent'></div>
            </div>
        </div>
    </div>

    @*Show column header templates*@
    <script type="text/x-template" id="header_id_template">
        <span style="font-size: 16px; font-weight: bold;">
            Show ID
        </span>
    </script>
    <script type="text/x-template" id="header_name_template">
        <span style="font-size: 16px; font-weight: bold;">
            Television Show Name
        </span>
    </script>
    <script type="text/x-template" id="header_showPath_template">
        <span style="font-size: 16px; font-weight: bold;">
            Show Path
        </span>
    </script>
    <script type="text/x-template" id="header_actions_template">
        <span style="font-size: 16px; font-weight: bold;">
            Actions
        </span>
    </script>

    @*Show action template*@
    <script type="text/x-template" id="content_show_actions_template">
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn btn-info" style="border: .5px solid black;" href="ShowOverview/${Id}">
                <img src="../images/icons/LibraryGrid/details-list-square-button.png" title="Show Page" style="height: 20px; width: 20px; border: .5px solid black;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn btn-secondary" style="border: .5px solid black;" href="MarkPriority/${Id}">
                <img src="../images/icons/LibraryGrid/pushpin-filled-icon.png" title="Mark Priority" style="width: 20px; height: 20px;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn btn-success" style="border: .5px solid black;" href="PlayAllSeasons/${Id}">
                <img src="../images/icons/LibraryGrid/playlist-numbered-icon.png" title="Play All Seasons" style="width: 20px; height: 20px;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn btn-outline-light" style="border: .5px solid black;" href="EditShow/${Id}">
                <img src="../images/icons/LibraryGrid/edit-filled-icon.png" title="Edit Show Details" style="height: 20px; width: 20px;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn btn-danger" style="border: .5px solid black;" href="RemoveShow/${Id}">
                <img src="../images/icons/LibraryGrid/remove-trashcan-icon.png" title="Remove from library" style="height: 20px; width: 20px;" />
            </a>
        </span>
    </script>

    @*Season action template if needed*@
    <script type="text/x-template" id="content_season_actions_template">
        <span style="font-size: 16px; font-weight: bold;">
            [Season Actions]
        </span>
    </script>

    @*Episode action template*@
    <script type="text/x-template" id="content_episode_actions_template">
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;" class="episodeDetails" data-id="${Id}">
            <a href="javascript:void(0);" style="border: .5px solid black;" class="btn">
                <img src="../images/icons/LibraryGrid/details-list-square-button.png" title="Show Page" style="height: 20px; width: 20px;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn" style="border: .5px solid black;" href="PlayEpisode/${Id}">
                <img src="../images/icons/LibraryGrid/video-play-icon.png" title="Play episode" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn" style="border: .5px solid black;" href="EditEpisode/${Id}">
                <img src="../images/icons/LibraryGrid/details-list-square-button.png" title="Show Page" style="height: 20px; width: 20px;" />
            </a>
        </span>
        <span style="font-size: 16px; font-weight: bold; padding-right: 15px;">
            <a class="btn" style="border: .5px solid black;" href="DeleteEpisode/${Id}">
                <img src="../images/icons/LibraryGrid/details-list-square-button.png" title="Show Page" style="height: 20px; width: 20px;" />
            </a>
        </span>
    </script>

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>

    @*Make call to ShowDetails to populate details modal for shows*@
    <script>

        var ShowDetailsPostBackURL = '/Television/ShowDetails';
        $(function () {
            $(".showDetails").click(function () {
                debugger;
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');

                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: ShowDetailsPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "id": id },
                    datatype: "json",
                    success: function (data) {
                        debugger;
                        $('#PopupModalContent').html(data);
                        $('#PopupModal').modal(options);
                        $('#PopupModal').modal('show');

                    },
                    error: function () {
                        alert("Unable to load show information.");
                    }
                });
            });

            $("#closbtn").click(function () {
                $('#PopupModal').modal('hide');
            });
        });

    </script>

    @*Make call to SeasonDetails to populate details modal for seasons*@
    <script>

        var SeasonDetailsPostBackURL = '/Television/SeasonDetails';
        $(function () {
            $(".seasonDetails").click(function () {
                debugger;
                console.log('clicked button...');

                var $buttonClicked = $(this);
                console.log('clicked ' + $buttonClicked);

                var id = $buttonClicked.attr('data-id');
                console.log('Id is equal to ' + id)

                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: SeasonDetailsPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "id": id },
                    datatype: "json",
                    success: function (data) {
                        debugger;
                        $('#PopupModalContent').html(data);
                        $('#PopupModal').modal(options);
                        $('#PopupModal').modal('show');

                    },
                    error: function () {
                        alert("Unable to load show information.");
                    }
                });
            });

            $("#closbtn").click(function () {
                $('#PopupModal').modal('hide');
            });
        });

    </script>

    @*Make call to EpisodeDetails to populate details modal for episodes*@
    <script>

        var EpisodeDetailsPostBackURL = '/Television/EpisodeDetails';
        $(function () {
            $(".episodeDetails").click(function () {
                debugger;
                console.log('clicked button...');

                var $buttonClicked = $(this);
                console.log('clicked ' + $buttonClicked);

                var id = $buttonClicked.attr('data-id');
                console.log('Id is equal to ' + id)

                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: EpisodeDetailsPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "id": id },
                    datatype: "json",
                    success: function (data) {
                        debugger;
                        $('#PopupModalContent').html(data);
                        $('#PopupModal').modal(options);
                        $('#PopupModal').modal('show');

                    },
                    error: function () {
                        alert("Unable to load show information.");
                    }
                });
            });

            $("#closbtn").click(function () {
                $('#PopupModal').modal('hide');
            });
        });

    </script>

}

<style>

    #loader {
        color: #008cff;
        font-family: 'Helvetica Neue','calibiri';
        font-size: 14px;
        height: 40px;
        left: 45%;
        position: absolute;
        top: 45%;
        width: 30%;
    }

    .wrap {
        margin: 0 auto;
        width: 240px;
    }

    h5 {
        font-weight: bold;
        text-align: center;
    }

    @@keyframes custom-rolling {
        0% {
            -webkit-transform: translate(-50%, -50%) rotate(0deg);
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            -webkit-transform: translate(-50%, -50%) rotate(360deg);
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    @@-webkit-keyframes custom-rolling {
        0% {
            -webkit-transform: translate(-50%, -50%) rotate(0deg);
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            -webkit-transform: translate(-50%, -50%) rotate(360deg);
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    .custom-rolling {
        position: relative;
    }

        .custom-rolling div,
        .custom-rolling div:after {
            border: 16px solid #51CACC;
            border-radius: 50%;
            border-top-color: transparent;
            height: 160px;
            position: absolute;
            width: 160px;
        }

        .custom-rolling div {
            -webkit-animation: custom-rolling 1.3s linear infinite;
            animation: custom-rolling 1.3s linear infinite;
            top: 100px;
            left: 100px;
        }

            .custom-rolling div:after {
                -ms-transform: rotate(90deg);
                -webkit-transform: rotate(90deg);
                transform: rotate(90deg);
            }

    .custom-rolling {
        -webkit-transform: translate(-31px, -31px) scale(0.31) translate(31px, 31px);
        height: 62px !important;
        transform: translate(-31px, -31px) scale(0.31) translate(31px, 31px);
        width: 62px !important;
    }
</style>
